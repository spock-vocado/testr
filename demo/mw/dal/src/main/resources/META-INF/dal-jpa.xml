<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

    <!--
        Dummy bean that works as a placeholder can be overriden later (specially in tests)
        in case we need to run code before the DS gets initialized. Just make sure the new
        bean has exactly the same id and is listed after including this module's context XML
    -->
    <bean id="jdbcDataSource.preInit" class="java.lang.String"/>

    <!-- See http://docs.codehaus.org/display/BTM/JdbcConfiguration2x -->
    <bean id="jdbcDataSource"
          class="bitronix.tm.resource.jdbc.PoolingDataSource"
          init-method="init"
          destroy-method="close"
          depends-on="jdbcDataSource.preInit">
        <property name="className" value="#{dalProps['dataSource.driver']}"/>
        <property name="uniqueName" value="testr"/>
        <property name="allowLocalTransactions" value="true"/>
        <property name="testQuery" value="#{dalProps['dataSource.testQuery']}"/>
        <property name="maxPoolSize" value="#{dalProps['dataSource.maxPoolSize']}"/>
        <property name="isolationLevel" value="#{dalProps['dataSource.isolationLevel']}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">#{dalProps['dataSource.user']}</prop>
                <prop key="password">#{dalProps['dataSource.password']}</prop>
                <prop key="URL">#{dalProps['dataSource.url']}</prop>
            </props>
        </property>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          depends-on="transactionManager">
        <property name="jtaDataSource" ref="jdbcDataSource"/>
        <property name="persistenceXmlLocation" value="#{dalProps['jpa.persistenceXmlLocation']}"/>
        <property name="packagesToScan" value="#{dalProps['jpa.packagesToScan']}"/>
        <property name="persistenceUnitName" value="testrPu"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true"/>
                <property name="database" value="#{dalProps['jpa.database']}"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">#{dalProps['hibernate.hbm2ddl.auto']}</prop>
                <prop key="hibernate.transaction.jta.platform">
                    org.hibernate.service.jta.platform.internal.BitronixJtaPlatform
                </prop>
            </props>
        </property>
    </bean>

</beans>